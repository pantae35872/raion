import std; // Not implemented

module abc; // Not implemented

proc part1(): u32 -> {
  let a = 1u32;
  let b = 2u32;
  let c = 3u32;
  let d = 4u32;
  let e = 5u32;
  return sum(a, b, c, d, e);
}

proc main(): u32 -> {
  let result1 = part1();
  let result2 = part2();
  let result3 = part3();
  let result4 = part4();
  let final_result = result1 + result2 + result3 + result4;
  return final_result;
}

proc part2(): u32 -> {
  let f = 6u32;
  let g = 7u32;
  let h = 8u32;
  let i = 9u32;
  let j = 10u32;
  return sum(f, g, h, i, j);
}

proc part3(): u32 -> {
  let k = 11u32;
  let l = 12u32;
  let m = 13u32;
  let n = 14u32;
  let o = 15u32;
  return sum(k, l, m, n, o);
}

proc another_fn(): u32 -> {
  let p = 10u32;
  let b = 20u32;
  return p + b;
}

proc part4(): u32 -> {
  let p = 16u32;
  let q = 17u32;
  let r = 18u32;
  let s = 19u32;
  let t = 20u32;
  return sum(p, q, r, s, t);
}

proc sum(u32 num1, u32 num2, u32 num3, u32 num4, u32 num5): u32 -> {
  let result = num1 + num2 + num3 + num4 + num5;
  let modified_result = modify_result(result);
  return modified_result;
}

proc modify_result(u32 input): u32 -> {
  let x = input * 2u32;
  x = x + 10u32;
  x = x / 3u32;
  x = x * extra_modifier();
  return x;
}

proc extra_modifier(): u32 -> {
  return 7u32;
}
